import { apiService } from './apiService';
import { UserProfile, UpdateProfileData, Achievement, Activity, ProfileStats } from '../../types/profile';

class ProfileService {
  async getProfile(): Promise<UserProfile> {
    try {
      const response = await apiService.get<UserProfile>('/auth/profile');
      return response;
    } catch (error) {
      console.error('Get profile error:', error);
      throw error;
    }
  }

  async updateProfile(data: UpdateProfileData): Promise<UserProfile> {
    try {
      const response = await apiService.put<UserProfile>('/auth/profile', data);
      return response;
    } catch (error) {
      console.error('Update profile error:', error);
      throw error;
    }
  }

  async getAchievements(): Promise<Achievement[]> {
    try {
      // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API
      return [
        {
          title: "100 —Å–µ—Å—Å–∏–π",
          description: "–ü—Ä–æ–≤–µ–ª–∏ –±–æ–ª—å—à–µ 100 –º–µ–Ω—Ç–æ—Ä—Å–∫–∏—Ö —Å–µ—Å—Å–∏–π",
          icon: "üéØ",
          earned: true,
          date: "15 –º–∞—è 2025"
        },
        {
          title: "–û—Ç–ª–∏—á–Ω—ã–π –º–µ–Ω—Ç–æ—Ä",
          description: "–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ —Å–µ—Å—Å–∏–π –≤—ã—à–µ 8.5",
          icon: "‚≠ê",
          earned: true,
          date: "20 –∞–ø—Ä–µ–ª—è 2025"
        },
        {
          title: "–≠–∫—Å–ø–µ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏",
          description: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏",
          icon: "üìä",
          earned: true,
          date: "3 –º–∞—Ä—Ç–∞ 2025"
        },
        {
          title: "–ú–∞—Å—Ç–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π",
          description: "–ù–∞—Å—Ç—Ä–æ–∏–ª–∏ 5+ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π",
          icon: "üîó",
          earned: false,
          date: undefined
        }
      ];
    } catch (error) {
      console.error('Get achievements error:', error);
      throw error;
    }
  }

  async getActivities(): Promise<Activity[]> {
    try {
      // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API
      return [
        {
          date: "–°–µ–≥–æ–¥–Ω—è, 14:30",
          action: "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å–µ—Å—Å–∏—è —Å –ê–Ω–Ω–æ–π –ö.",
          score: 9.2
        },
        {
          date: "–í—á–µ—Ä–∞, 16:45",
          action: "–ó–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è",
          score: undefined
        },
        {
          date: "2 –¥–Ω—è –Ω–∞–∑–∞–¥",
          action: "–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –æ—Ç—á–µ—Ç –ø–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ",
          score: undefined
        },
        {
          date: "3 –¥–Ω—è –Ω–∞–∑–∞–¥",
          action: "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram",
          score: undefined
        }
      ];
    } catch (error) {
      console.error('Get activities error:', error);
      throw error;
    }
  }

  async getProfileStats(): Promise<ProfileStats> {
    try {
      // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API
      return {
        completedCourses: 15,
        completedAssignments: 32,
        averageScore: 4.8,
        totalSessions: 45
      };
    } catch (error) {
      console.error('Get profile stats error:', error);
      throw error;
    }
  }

  async uploadAvatar(imageUri: string): Promise<string> {
    try {
      // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤—ã–π URL, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API
      return imageUri;
    } catch (error) {
      console.error('Upload avatar error:', error);
      throw error;
    }
  }
}

export const profileService = new ProfileService();

